
// $header-size: 0rem;
//   // width = browser width, height = 58% of width + header-size
//   $aspect-ratio-1: "25/14";
//
//   // width = browser width when image is at max-width, height = image-max-width + header-size
//   // example if image-max-width = 1024 then when 1024 = 58% of browser width, breakpoint is approx 1765px
//   $large-break-point-1: "1765px";
//   // Aspect ratio here is the large width break point below, height = image-max-width + header-size
//
//   // width = image-max-width - header-size * 2
//   $large-break-point-2: "2048px";
//
//   // Aspect ratio here is based on the width above, height = image-max-width + header-size
//   $aspect-ratio-2: "24/12";
//   $min-height: "1024px"; // image-max-width

// $header-size: 10rem;
// $aspect-ratio-1: "25/18";  // 1000 / (580+160) =  1.35
// $large-break-point-1: "1765px"; // 1024/.58 = 1765
// $large-break-point-2: "2048px"; // 1024 * 2 = 2048
// $aspect-ratio-2: "25/14"; // 2048 / (1024 + 160) = 1.72
// $min-height: "1184px"; // random low ratio for large and tall screens

$header-value: 0;
$image-max-size: 1024;

$header-size: $header-value/16 + rem;
$large-break-point-1: ($image-max-size/(.58));
$aspect-ratio-1-numerator: round($large-break-point-1 / ($image-max-size + $header-value) * 100);
$aspect-ratio-1: "#{$aspect-ratio-1-numerator}" + "/100";
$large-break-point-2: ($image-max-size*2);
$aspect-ratio-2-numerator: round($large-break-point-2 / ($image-max-size + $header-value) * 100);
$aspect-ratio-2: "#{$aspect-ratio-2-numerator}/100";
$min-height: $image-max-size + $header-value;

.header-toolbar {
  height: $header-size;
  position: relative;
  @media screen and (min-width: 840px) {
    width: 100%;
    position: fixed;
    z-index: 1;
    &__logo {
      text-transform: uppercase;
      font-size: 14px;
      padding-top: 1.2rem;
      padding-left: 1rem;
      font-weight: bold;
      letter-spacing: 4px;
    }
  }
}

.rsvp-button {
  position: fixed;
  left: 3rem;
  bottom: 3rem;
}

.two-columns { // to extend to full height of screen
  min-height:100vh;
  width:100%;
  display: flex;
  flex-direction: column;
  @media screen and (min-width: 840px) {
    flex-direction: row;
  }
  @media screen and (min-width: 840px) and (max-width: 1080px) and (min-height: 1122px) {
    flex-direction: column;
  }
}



.blocks-list {
  display: flex;
  flex: 1 100%;
  flex-direction: column;
  align-items: center;
  order: 2;
  @media screen and (min-width: 840px) {
    flex: 0 0 auto;
    order: 1;
    width: calc(100vw - 100vh + #{$header-size});
    max-width: 58vw;
    min-width: 42vw;
    margin-top: #{$header-size};
  }
  @media screen and (min-width: 840px) and (max-width: 1080px) and (min-height: 1122px) {
    flex: 1 100%;
    flex-direction: column;
    align-items: center;
    order: 2;
    max-width: 100vw;
    width: 100%;
    margin-top: -2rem;
  }
  @media screen and (min-width: #{$large-break-point-2 + "px"}) {
    min-width: 50vw; // Max out at 50/50 for very large screens
  }

  .block {
    display: flex;
    flex-direction: column;
    &.basic-info {
      &__title {
        align-self: center;
      }
    }
  }
}

.media-wrapper {
  display:flex;
  flex: 1 100%;
  order: 1;
  justify-content: center;
  align-content: center;
  flex-flow:column nowrap;
  position: relative;

  @media screen and (min-width: 580px) {
    margin: 2rem 2rem 0 2rem;
  }

  @media screen and (min-width: 840px) {
    flex: 1 1 0;
    flex-basis: 0;
    order: 2;
    height: auto;
    min-width: 42vw;
    margin: unset;
  }
  @media screen and (min-width: 840px) and (max-width: 1080px) and (min-height: 1122px) {
    flex: 1 100%;
    order: 1;
    justify-content: center;
    align-content: center;
    flex-flow:column nowrap;
    margin: 8rem 4rem 0 4rem
  }
}
.primary-media {
  position: relative;
  max-width: 1024px;
  max-height: 1024px;
  width: 100%;
  top: 0;
  align-self: center;

  @media screen and (min-width: 840px) {
    position: fixed;
    height: calc(100vh - #{$header-size}); // This needs to be changed with header
    align-self: flex-end;
    top: $header-size;
    min-height: 42vw;
    width: auto;
  }


  @media screen and (min-width: 840px) and (max-aspect-ratio: #{$aspect-ratio-1}) {
    width: calc(58vw - 4rem); // These need to change with header
    height: calc(58vw - 4rem);
    align-self: center;
    top: 50%;
    transform: translateY(-50%);
    margin-top: calc(#{$header-size} / 2); //
  }

  @media screen and (min-width: 840px) and (max-width: 1080px) and (min-height: 1122px) {
    position: relative;
    max-width: 1024px;
    max-height: 1024px;
    width: 100%;
    top: 0;
    align-self: center;
    transform: none;
    margin: unset;
    height: auto;
  }

  // To deal with the 1024 max width on 42/58 splits
  @media screen and (min-width: #{$large-break-point-1 + "px"}) and (max-aspect-ratio: #{$aspect-ratio-2}) {
    width: calc(56vw - 4rem);
    height: calc(56vw - 4rem);
    align-self: center;
    padding: 3rem;
    min-height: 780px;
    top: 50%;
    transform: translateY(-50%);
    margin-top: calc(#{$header-size} / 2); //
  }

  // To deal with the 1024 max width on all views
  @media screen and (min-width: #{$large-break-point-2 + "px"}) {
    // to allow float but keep it aligned to the top
    width: auto;
    height: calc(100vh - #{$header-size}); // 3rem padding each side
    align-self: center;
    justify-self: center;
    padding: 3rem;
    min-height: 780px;
    top: $header-size;
  }
  @media screen and (min-width: #{$large-break-point-2 + "px"}) and (min-height: #{$min-height + "px"} ) {
    // to keep the image centered
    top: 50%;
    transform: translateY(-50%);
    margin-top: calc(#{$header-size} / 2); //
  }
}
